[project]
name = "kra-race-prediction-api"
version = "1.0.0"
description = "KRA Horse Racing Prediction REST API"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi[standard]>=0.115.5",
    "uvicorn[standard]>=0.32.1",
    "python-dotenv>=1.0.1",
    "supabase>=2.11.0",
    "httpx>=0.28.0",
    "aiofiles>=24.1.0",
    "celery>=5.4.0",
    "redis>=5.2.1",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.12",
    "prometheus-client>=0.21.0",
    "structlog>=24.4.0",
    "pydantic>=2.10.3",
    "pydantic-settings>=2.6.1",
    "pendulum>=3.0.0",
    "orjson>=3.10.12",
    "sqlalchemy>=2.0.36",
    "asyncpg>=0.30.0",
    "tenacity>=9.0.0",
    "pandas>=2.2.0",
    "greenlet>=3.1.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.0.0",
    "requests>=2.32.3",
    "aiosqlite>=0.20.0",
    "black>=24.10.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.0",
    "pytest-cov>=6.0.0",
    "pytest-timeout>=2.3.1",
    "requests>=2.32.3",
    "aiosqlite>=0.20.0",
    "black>=24.10.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["."]

[tool.uv]
package = true  # API는 패키지로 배포 가능

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py313"
extend-exclude = [".venv"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort (import sorting)
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long handled by Black
    "B008",  # allow function calls in argument defaults
    "C901",  # too complex (info only)
    "W191",  # indentation contains tabs
]
fixable = ["ALL"]

[tool.mypy]
python_version = "3.13"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
explicit_package_bases = true
mypy_path = "."
namespace_packages = true
check_untyped_defs = false
no_implicit_optional = false
strict_optional = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*", "*Tests"]
addopts = """
  -v
  --strict-markers
  --tb=short
  --cov=.
  --cov-config=.coveragerc
  --cov-branch
  --cov-report=term-missing:skip-covered
  --cov-report=html
  --cov-report=xml
  --maxfail=1
  --disable-warnings
  -p no:warnings
  -k "not test_api.py"
"""
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
markers = [
  "unit: Unit tests (fast, isolated)",
  "integration: Integration tests (may require external services)",
  "e2e: End-to-end tests (full system tests)",
  "slow: Slow running tests",
  "auth: Authentication related tests",
  "db: Database related tests",
  "external: Tests requiring external API calls",
  "smoke: Quick smoke tests",
]

[tool.coverage.run]
source = ["api"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
