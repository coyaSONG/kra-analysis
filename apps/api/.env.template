# KRA API 서버 환경 변수 설정
# 이 파일을 .env로 복사하고 실제 값으로 채워주세요: cp .env.template .env

# ============================================================================
# 핵심 설정 (REQUIRED)
# ============================================================================

# 애플리케이션 환경
ENVIRONMENT=development  # development, staging, production

# 서버 포트
PORT=8001

# 보안 키 (프로덕션에서는 반드시 변경!)
SECRET_KEY=changeme-secret-key-$(openssl rand -hex 32)

# ============================================================================
# Supabase 데이터베이스 (REQUIRED)
# ============================================================================
# Supabase Dashboard > Settings > Database에서 확인
# 프로젝트 ID: kwhwqhopxxhcpbcmfdxh

# 1. Supabase Dashboard에서 Database 설정으로 이동
# 2. "Connection string" 섹션에서 "Pooler" (Transaction mode) 선택
# 3. 비밀번호를 [YOUR-PASSWORD]에 입력

# Connection Pooler (권장 - pgbouncer)
DATABASE_URL=postgresql+asyncpg://postgres.kwhwqhopxxhcpbcmfdxh:[YOUR-PASSWORD]@aws-0-ap-northeast-2.pooler.supabase.com:6543/postgres?prepared_statement_cache_size=0

# Database Pool 설정
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20

# ============================================================================
# Supabase API (REQUIRED for Supabase Client)
# ============================================================================
# Supabase Dashboard > Settings > API에서 확인
#
# Legacy Keys 사용 (anon / service_role - JWT 형식):
# - "Project API keys" 섹션에서 찾으세요
# - anon / public: 클라이언트용 (공개 가능)
# - service_role: 서버 전용 (절대 공개 금지!)
#
# 형식 예시:
# - anon: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3...
# - service_role: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3...

SUPABASE_URL=https://kwhwqhopxxhcpbcmfdxh.supabase.co
SUPABASE_ANON_KEY=[YOUR-ANON-KEY-JWT]
SUPABASE_SERVICE_ROLE_KEY=[YOUR-SERVICE-ROLE-KEY-JWT]

# ============================================================================
# Redis / Cache (OPTIONAL - 없으면 in-memory 사용)
# ============================================================================
REDIS_URL=redis://localhost:6379/0
CACHE_TTL=3600

# ============================================================================
# KRA API (REQUIRED for data collection)
# ============================================================================
KRA_API_KEY=[YOUR-KRA-API-KEY]

# ============================================================================
# API 인증 (REQUIRED in production)
# ============================================================================
# JSON 배열(권장) 또는 콤마 구분 문자열
# 프로덕션: 안전한 키 생성 - openssl rand -hex 32
VALID_API_KEYS=["test-api-key-123456789"]

# ============================================================================
# Logging
# ============================================================================
LOG_LEVEL=info  # debug, info, warning, error

# ============================================================================
# 설정 확인 방법
# ============================================================================
# 1. 파일 복사: cp .env.template .env
# 2. 값 입력: [YOUR-PASSWORD] 등을 실제 값으로 변경
# 3. 테스트: python3 scripts/test_db_connection.py
# 4. 서버 실행: python3 main_v2.py

# ============================================================================
# Supabase 비밀번호 찾기/재설정
# ============================================================================
# 비밀번호를 모르는 경우:
# 1. https://supabase.com/dashboard 로그인
# 2. kra-analysis 프로젝트 선택
# 3. Settings > Database
# 4. "Reset database password" 클릭
# 5. 새 비밀번호 복사하여 위 DATABASE_URL에 입력

# ============================================================================
# 특수 문자 URL 인코딩
# ============================================================================
# 비밀번호에 특수 문자가 있으면 URL 인코딩 필요:
# ! → %21    @ → %40    # → %23
# $ → %24    % → %25    ^ → %5E
# & → %26    * → %2A    ( → %28
# ) → %29