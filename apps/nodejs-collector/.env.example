# =============================================================================
# KRA Data Collector API - Environment Configuration
# =============================================================================

# Server Configuration
# --------------------
# Port for the API server to listen on
PORT=3001

# Host interface to bind to (use 0.0.0.0 for production)
HOST=localhost

# Node.js environment (development, production, test)
NODE_ENV=development

# CORS Configuration
# ------------------
# Allowed origins for Cross-Origin Resource Sharing (comma-separated)
# Use * for all origins in development, specific domains in production
CORS_ORIGINS=*

# Redis Configuration (Optional)
# -------------------------------
# Redis enables caching and improved rate limiting
# Leave empty to disable Redis features

# Redis server host
REDIS_HOST=localhost

# Redis server port
REDIS_PORT=6379

# Redis password (if authentication required)
REDIS_PASSWORD=

# Complete Redis URL (overrides individual settings above)
# Format: redis://[username]:[password]@[host]:[port]/[database]
# Example: redis://user:pass@localhost:6379/0
REDIS_URL=

# KRA API Configuration
# ---------------------
# Korean Racing Authority Public Data API settings

# KRA API base URL (should not change unless KRA updates their API)
KRA_API_BASE_URL=http://data.kra.co.kr

# KRA service key (obtain from data.kra.co.kr)
# Without this, you'll be limited to lower rate limits
KRA_API_KEY=

# Request timeout in milliseconds (default: 30000)
KRA_API_TIMEOUT=30000

# Number of retry attempts for failed requests (default: 3)
KRA_API_RETRY_ATTEMPTS=3

# Base delay between retries in milliseconds (default: 1000)
KRA_API_RETRY_DELAY=1000

# Exponential backoff factor for retries (default: 2)
KRA_API_RETRY_BACKOFF_FACTOR=2

# Rate limiting configuration
# Max requests per time window (default: 60)
KRA_API_RATE_LIMIT_MAX=60

# Time window in milliseconds (default: 60000 = 1 minute)
KRA_API_RATE_LIMIT_WINDOW=60000

# Logging Configuration
# ---------------------
# Log level: error, warn, info, debug (default: info)
LOG_LEVEL=info

# Log format: json, simple (default: json for production)
LOG_FORMAT=json

# Log file path (optional, logs to console if not set)
LOG_FILE=

# Enable request logging (default: true)
LOG_REQUESTS=true

# Enable slow query logging (default: true)
LOG_SLOW_QUERIES=true

# Slow query threshold in milliseconds (default: 1000)
SLOW_QUERY_THRESHOLD=1000

# Security Configuration
# ----------------------
# JWT secret key for token signing (generate a secure random key)
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=

# JWT token expiration time (default: 24h)
JWT_EXPIRES_IN=24h

# API key for client authentication (optional)
# Generate with: node -e "console.log(require('crypto').randomBytes(16).toString('hex'))"
API_KEY=

# Encryption key for sensitive data (32 characters)
# Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
ENCRYPTION_KEY=

# Rate Limiting Configuration
# ---------------------------
# Rate limiting is applied per IP address

# Default rate limit for unauthenticated requests
# Format: "requests per window"
RATE_LIMIT_DEFAULT_MAX=100

# Rate limit window in milliseconds (default: 900000 = 15 minutes)
RATE_LIMIT_WINDOW_MS=900000

# Rate limit for authenticated requests
RATE_LIMIT_AUTH_MAX=1000

# Burst protection (requests per minute)
RATE_LIMIT_BURST_MAX=20
RATE_LIMIT_BURST_WINDOW=60000

# Skip rate limiting for these IPs (comma-separated)
RATE_LIMIT_SKIP_IPS=127.0.0.1,::1

# Caching Configuration
# ---------------------
# Cache TTL (Time To Live) settings in seconds

# Default cache TTL (default: 900 = 15 minutes)
CACHE_DEFAULT_TTL=900

# Static data cache TTL (default: 3600 = 1 hour)
CACHE_STATIC_TTL=3600

# Race result cache TTL (default: 86400 = 24 hours)
CACHE_RACE_RESULT_TTL=86400

# Enable cache compression (default: true)
CACHE_COMPRESSION=true

# Performance Configuration
# -------------------------
# Request parsing limits

# Maximum JSON payload size (default: 10mb)
MAX_JSON_SIZE=10mb

# Maximum URL-encoded payload size (default: 10mb)
MAX_URLENCODED_SIZE=10mb

# Request timeout in milliseconds (default: 30000)
REQUEST_TIMEOUT=30000

# Enable compression for responses > threshold (default: 1024 bytes)
COMPRESSION_THRESHOLD=1024

# Compression level 1-9 (default: 6)
COMPRESSION_LEVEL=6

# Monitoring Configuration
# ------------------------
# Health check and monitoring settings

# Enable detailed health checks (default: true)
HEALTH_CHECK_DETAILED=true

# Health check timeout in milliseconds (default: 5000)
HEALTH_CHECK_TIMEOUT=5000

# Enable metrics collection (default: true)
METRICS_ENABLED=true

# Metrics collection interval in milliseconds (default: 30000)
METRICS_INTERVAL=30000

# Development Configuration
# --------------------------
# Settings for development environment only

# Enable debug mode (adds extra logging and validation)
DEBUG_MODE=false

# Enable API documentation endpoint (default: true in development)
ENABLE_API_DOCS=true

# Enable request/response logging for debugging
DEBUG_REQUESTS=false

# Enable TypeScript source maps in stack traces
ENABLE_SOURCE_MAPS=true

# Production Configuration
# ------------------------
# Settings for production deployment

# Enable security headers (default: true in production)
SECURITY_HEADERS=true

# Enable HTTPS redirect (default: false, enable with reverse proxy)
FORCE_HTTPS=false

# Trust proxy headers (set to number of reverse proxies)
TRUST_PROXY=0

# Enable graceful shutdown (default: true)
GRACEFUL_SHUTDOWN=true

# Graceful shutdown timeout in milliseconds (default: 30000)
SHUTDOWN_TIMEOUT=30000

# Data Storage Configuration
# --------------------------
# Local data storage settings

# Local cache directory (default: ./cache)
CACHE_DIR=cache

# Log file directory (default: ./logs)
LOG_DIR=logs

# Temporary file directory (default: ./tmp)
TEMP_DIR=tmp

# Maximum disk space for cache in MB (default: 1000)
MAX_CACHE_SIZE=1000

# External Service Configuration
# ------------------------------
# Configuration for external services integration

# Webhook URL for notifications (optional)
WEBHOOK_URL=

# Slack webhook for alerts (optional)
SLACK_WEBHOOK_URL=

# Email configuration for notifications (optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASS=
SMTP_FROM=noreply@yourcompany.com

# Feature Flags
# -------------
# Enable/disable specific features

# Enable WebSocket support (future feature)
ENABLE_WEBSOCKET=false

# Enable GraphQL endpoint (future feature)
ENABLE_GRAPHQL=false

# Enable admin panel (future feature)
ENABLE_ADMIN=false

# Enable batch processing (future feature)
ENABLE_BATCH_PROCESSING=false