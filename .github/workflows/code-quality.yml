name: Code Quality Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Python 코드 품질 검사 (Ruff/Black)
  python-quality:
    name: Python Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install quality tools (ruff/black)
        run: |
          python -m pip install --upgrade pip
          pip install ruff black

      - name: Ruff - 린트 검사 (게이트)
        run: |
          echo "🔍 Ruff 검사(게이트) 중..."
          # 자동수정이 필요한 변경점을 diff로 출력하고, 발견 시 실패 처리
          ruff check . --diff --exit-non-zero-on-fix
          # 비수정 가능 위반까지 게이트
          ruff check .

      - name: Black - 코드 포맷 검사
        run: |
          echo "🎨 Black 코드 포맷 검사 중..."
          black --check --diff packages/scripts
        continue-on-error: true

  # JavaScript 코드 품질 검사 (pnpm 워크스페이스)
  javascript-quality:
    name: JavaScript Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get pnpm store directory
        shell: bash
        run: |
          STORE_PATH=$(pnpm store path --silent)
          echo "STORE_PATH=$STORE_PATH" >> $GITHUB_ENV
          mkdir -p "$STORE_PATH"

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install workspace dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Run workspace lint
        run: pnpm -w run lint || true

  # 코드 품질 요약 리포트
  quality-summary:
    name: Code Quality Summary
    needs: [python-quality, javascript-quality]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: 품질 검사 요약
        run: |
          echo "📊 코드 품질 검사 완료"
          echo ""
          echo "다음 단계:"
          echo "1. 위의 검사 결과를 확인하세요"
          echo "2. 코드 스타일 자동 수정을 원하면 로컬에서 다음 명령어를 실행하세요:"
          echo "   - Python: black packages/scripts && ruff check --fix packages/scripts"
          echo "   - Node: pnpm -w run lint"
          echo ""
          echo "💡 설정은 pyproject.toml 및 각 패키지의 ESLint 설정을 참고하세요."
