name: NodeJS Collector API Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/collector/**'
      - '.github/workflows/collector-test.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'apps/collector/**'
      - '.github/workflows/collector-test.yml'
  workflow_dispatch:

jobs:
  test:
    name: Test API Endpoints
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      KRA_SERVICE_KEY: ${{ secrets.KRA_SERVICE_KEY }}
    
    defaults:
      run:
        working-directory: apps/collector
    
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get pnpm store directory
      shell: bash
      run: |
        STORE_PATH=$(pnpm store path --silent)
        echo "STORE_PATH=$STORE_PATH" >> $GITHUB_ENV
        mkdir -p "$STORE_PATH"

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml', '**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies (workspace)
      working-directory: .
      run: pnpm install --no-frozen-lockfile

    - name: Setup Turborepo cache
      uses: actions/cache@v4
      with:
        path: .turbo
        key: ${{ runner.os }}-turbo-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-turbo-

    - name: Run lint with Turborepo
      working-directory: .
      run: pnpm turbo run lint --filter=@apps/collector

    - name: Run type check with Turborepo
      working-directory: .
      run: pnpm turbo run typecheck --filter=@apps/collector

    - name: Run unit tests (CI subset) with Turborepo
      working-directory: .
      run: pnpm turbo run test:ci --filter=@apps/collector
      env:
        NODE_ENV: test
        LOG_LEVEL: error

    - name: Run coverage (collector) with Turborepo
      working-directory: .
      run: pnpm turbo run test:coverage --filter=@apps/collector
      env:
        NODE_ENV: test
        LOG_LEVEL: error
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      if: matrix.node-version == '22.x'
      with:
        directory: ./apps/collector/coverage
        flags: collector
    
    - name: Build with Turborepo
      working-directory: .
      run: pnpm turbo run build --filter=@apps/collector

    - name: Start server for E2E tests
      working-directory: .
      run: |
        pnpm -F @apps/collector start &
        sleep 5
      env:
        NODE_ENV: test
        PORT: 3001
        LOG_LEVEL: error
    
    - name: Run E2E API tests
      if: ${{ env.KRA_SERVICE_KEY != '' }}
      working-directory: .
      run: pnpm -F @apps/collector run test:kra
    
    - name: Check API health
      run: |
        # Health endpoint should return 200 OK
        curl -fsS http://localhost:3001/health > /dev/null
    
    - name: Test critical endpoints
      if: ${{ env.KRA_SERVICE_KEY != '' }}
      run: |
        # Test Race API
        curl -f "http://localhost:3001/api/v1/races/20240106/서울/1" || exit 1
        
        # Test Horse API  
        curl -f "http://localhost:3001/api/v1/horses/0053587" || exit 1
        
        # Test Jockey API
        curl -f "http://localhost:3001/api/v1/jockeys/080476" || exit 1
        
        # Test Trainer API
        curl -f "http://localhost:3001/api/v1/trainers/070165" || exit 1
    
    - name: Stop server
      if: always()
      run: pkill -f "node" || true
